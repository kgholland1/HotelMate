// <auto-generated />
using System;
using EPOS.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EPOS.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190209130022_SortingTime")]
    partial class SortingTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EPOS.API.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckIn");

                    b.Property<DateTime?>("CheckOut");

                    b.Property<string>("CheckOutBy");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<int>("GuestId");

                    b.Property<string>("GuestName")
                        .HasMaxLength(100);

                    b.Property<int>("HotelId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsMain");

                    b.Property<string>("Phone");

                    b.Property<string>("RoomNumber");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("EPOS.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Description");

                    b.Property<string>("HeaderName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("HotelId");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EPOS.API.Models.CatHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HeaderName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("CatHeaders");
                });

            modelBuilder.Entity("EPOS.API.Models.Extra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExtraName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("ExtraType")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("HotelId");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Extras");
                });

            modelBuilder.Entity("EPOS.API.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasMaxLength(80);

                    b.Property<string>("Address2")
                        .HasMaxLength(80);

                    b.Property<string>("Country")
                        .HasMaxLength(40);

                    b.Property<string>("County")
                        .HasMaxLength(40);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<string>("History");

                    b.Property<string>("HotelCode")
                        .HasMaxLength(30);

                    b.Property<string>("HotelName")
                        .HasMaxLength(160);

                    b.Property<string>("Introduction");

                    b.Property<string>("Phone")
                        .HasMaxLength(25);

                    b.Property<string>("PostCode")
                        .HasMaxLength(15);

                    b.Property<string>("Town")
                        .HasMaxLength(40);

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.Property<string>("Website")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("EPOS.API.Models.Luggage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookStatus")
                        .HasMaxLength(20);

                    b.Property<int>("BookingId");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<string>("GuestName")
                        .HasMaxLength(100);

                    b.Property<int>("HotelId");

                    b.Property<bool>("IsDeleted")
                        .HasMaxLength(50);

                    b.Property<int>("NoOfLuggage");

                    b.Property<string>("Phone")
                        .HasMaxLength(30);

                    b.Property<string>("Request");

                    b.Property<string>("ResDate")
                        .HasMaxLength(30);

                    b.Property<string>("ResTime")
                        .HasMaxLength(30);

                    b.Property<string>("Response");

                    b.Property<string>("RoomNumber")
                        .HasMaxLength(50);

                    b.Property<string>("SortingTime");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Luggages");
                });

            modelBuilder.Entity("EPOS.API.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("HotelId");

                    b.Property<string>("MenuCode")
                        .HasMaxLength(60);

                    b.Property<string>("MenuDesc");

                    b.Property<int>("MenuImageType");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<int>("MenuSortNumber");

                    b.Property<string>("MenuSubName")
                        .HasMaxLength(60);

                    b.Property<string>("ShortDesc");

                    b.Property<bool>("ShowExtras");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("HotelId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("EPOS.API.Models.MenuExtra", b =>
                {
                    b.Property<int>("MenuId");

                    b.Property<int>("ExtraId");

                    b.Property<string>("ExtraName");

                    b.Property<string>("ExtraType");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("MenuId", "ExtraId");

                    b.HasIndex("ExtraId");

                    b.ToTable("MenuExtra");
                });

            modelBuilder.Entity("EPOS.API.Models.MenuOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookingId");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Email");

                    b.Property<string>("GuestName");

                    b.Property<int>("HotelId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("OrderTime")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool>("Paid");

                    b.Property<string>("PaymentGatewayID");

                    b.Property<string>("PaymentMethod");

                    b.Property<decimal>("PaymentSurcharge")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Phone");

                    b.Property<string>("PromotionCode");

                    b.Property<string>("Request");

                    b.Property<string>("Response");

                    b.Property<string>("RoomNumber");

                    b.Property<string>("SortingTime");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("MenuOrders");
                });

            modelBuilder.Entity("EPOS.API.Models.MenuOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DishRequest");

                    b.Property<string>("ExtraKeys");

                    b.Property<string>("Extras");

                    b.Property<int>("MenuCount");

                    b.Property<int>("MenuID");

                    b.Property<string>("MenuName");

                    b.Property<int>("MenuOrderId");

                    b.Property<string>("OptionKeys");

                    b.Property<string>("Options");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuOrderId");

                    b.ToTable("MenuOrderDetails");
                });

            modelBuilder.Entity("EPOS.API.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookingId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("EPOS.API.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HotelId");

                    b.Property<int>("HouseKeepingCount");

                    b.Property<int>("LuggageCount");

                    b.Property<int>("OrderCount");

                    b.Property<int>("ReservationCount");

                    b.Property<int>("SPACount");

                    b.Property<int>("TaxiCount");

                    b.Property<int>("WakeupCount");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("EPOS.API.Models.OpenTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("End");

                    b.Property<int>("HotelId");

                    b.Property<string>("Interval");

                    b.Property<string>("Restaurant");

                    b.Property<string>("Start");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("TypeName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("OpenTimes");
                });

            modelBuilder.Entity("EPOS.API.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Charge")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("HotelId");

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EPOS.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int>("HotelId");

                    b.Property<bool>("IsMain");

                    b.Property<string>("PhotoType")
                        .HasMaxLength(40);

                    b.Property<int>("PhotoTypeId");

                    b.Property<string>("PublicId");

                    b.Property<string>("Url")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("EPOS.API.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookingId");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<string>("Feedback");

                    b.Property<string>("GuestName")
                        .HasMaxLength(100);

                    b.Property<int>("HotelId");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsNew");

                    b.Property<int>("NoOfPerson");

                    b.Property<string>("Phone")
                        .HasMaxLength(30);

                    b.Property<string>("Request");

                    b.Property<string>("ResApproved")
                        .HasMaxLength(10);

                    b.Property<string>("ResDate")
                        .HasMaxLength(30);

                    b.Property<string>("ResTime")
                        .HasMaxLength(30);

                    b.Property<string>("RestaurantName")
                        .HasMaxLength(100);

                    b.Property<string>("RoomNumber")
                        .HasMaxLength(50);

                    b.Property<string>("TypeName")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("EPOS.API.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HotelId");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("EPOS.API.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("EPOS.API.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Building")
                        .HasMaxLength(60);

                    b.Property<string>("FloorNo")
                        .HasMaxLength(40);

                    b.Property<int>("HotelId");

                    b.Property<string>("RoomDesc")
                        .HasMaxLength(300);

                    b.Property<string>("RoomNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("EPOS.API.Models.Taxi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookStatus")
                        .HasMaxLength(20);

                    b.Property<int>("BookingId");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<string>("GuestName")
                        .HasMaxLength(100);

                    b.Property<int>("HotelId");

                    b.Property<bool>("IsDeleted")
                        .HasMaxLength(50);

                    b.Property<int>("NoOfPerson");

                    b.Property<string>("Phone")
                        .HasMaxLength(30);

                    b.Property<string>("Request");

                    b.Property<string>("ResDate")
                        .HasMaxLength(30);

                    b.Property<string>("ResTime")
                        .HasMaxLength(30);

                    b.Property<string>("Response");

                    b.Property<string>("RoomNumber")
                        .HasMaxLength(50);

                    b.Property<string>("SortingTime");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Taxis");
                });

            modelBuilder.Entity("EPOS.API.Models.Tourist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(250);

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<string>("Facebook")
                        .HasMaxLength(100);

                    b.Property<int>("HotelId");

                    b.Property<string>("OtFriday")
                        .HasMaxLength(70);

                    b.Property<string>("OtMessage")
                        .HasMaxLength(150);

                    b.Property<string>("OtMonday")
                        .HasMaxLength(70);

                    b.Property<string>("OtSaturday")
                        .HasMaxLength(70);

                    b.Property<string>("OtSunday")
                        .HasMaxLength(70);

                    b.Property<string>("OtThursday")
                        .HasMaxLength(70);

                    b.Property<string>("OtTuesday")
                        .HasMaxLength(70);

                    b.Property<string>("OtWednesday")
                        .HasMaxLength(70);

                    b.Property<string>("Phone")
                        .HasMaxLength(25);

                    b.Property<string>("TourDesc");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("TouristType")
                        .HasMaxLength(30);

                    b.Property<string>("Website")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Tourists");
                });

            modelBuilder.Entity("EPOS.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Department");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("HotelId");

                    b.Property<DateTime>("LastActive");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("Position");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("EPOS.API.Models.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("EPOS.API.Models.WakeUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookStatus")
                        .HasMaxLength(20);

                    b.Property<int>("BookingId");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<string>("GuestName")
                        .HasMaxLength(100);

                    b.Property<int>("HotelId");

                    b.Property<bool>("IsDeleted")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasMaxLength(30);

                    b.Property<string>("Request");

                    b.Property<string>("ResDate")
                        .HasMaxLength(30);

                    b.Property<string>("ResTime")
                        .HasMaxLength(30);

                    b.Property<string>("Response");

                    b.Property<string>("RoomNumber")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("WakeUps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<int>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("EPOS.API.Models.Booking", b =>
                {
                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Extra", b =>
                {
                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Luggage", b =>
                {
                    b.HasOne("EPOS.API.Models.Booking", "booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Menu", b =>
                {
                    b.HasOne("EPOS.API.Models.Category", "Category")
                        .WithMany("Menus")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.MenuExtra", b =>
                {
                    b.HasOne("EPOS.API.Models.Extra", "Extra")
                        .WithMany("MenuExtras")
                        .HasForeignKey("ExtraId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EPOS.API.Models.Menu", "Menu")
                        .WithMany("MenuExtras")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.MenuOrder", b =>
                {
                    b.HasOne("EPOS.API.Models.Booking", "booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.MenuOrderDetail", b =>
                {
                    b.HasOne("EPOS.API.Models.MenuOrder", "MenuOrder")
                        .WithMany("MenuOrderDetails")
                        .HasForeignKey("MenuOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Note", b =>
                {
                    b.HasOne("EPOS.API.Models.Booking", "booking")
                        .WithMany("Notes")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.OpenTime", b =>
                {
                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Payment", b =>
                {
                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Photo", b =>
                {
                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany("Photos")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Reservation", b =>
                {
                    b.HasOne("EPOS.API.Models.Booking", "booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Restaurant", b =>
                {
                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Room", b =>
                {
                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Taxi", b =>
                {
                    b.HasOne("EPOS.API.Models.Booking", "booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.Tourist", b =>
                {
                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.User", b =>
                {
                    b.HasOne("EPOS.API.Models.Hotel", "hotel")
                        .WithMany("Users")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.UserRole", b =>
                {
                    b.HasOne("EPOS.API.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EPOS.API.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPOS.API.Models.WakeUp", b =>
                {
                    b.HasOne("EPOS.API.Models.Booking", "booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("EPOS.API.Models.Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("EPOS.API.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("EPOS.API.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("EPOS.API.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
